@page "/"
@inject NavigationManager NavManager
@inject MediaWikiOAuthService OAuthService
@inject IHttpContextAccessor HttpContextAccessor
@inject IHttpClientFactory HttpClientFactory
@inject ILoggerFactory LoggerFactory

<PageTitle>BluehillBot B 긴급 정지 버튼</PageTitle>

@if (userProfile is null) {
    <h1>BluehillBot B 긴급 정지 버튼</h1>

    <p>아래 버튼을 눌러 로그인 해 주세요.</p>

    <p style="text-align: center">
        <button class="btn btn-primary" style="width: 500px" @onclick="login">로그인</button>
    </p>
} else if (userProfile.Groups.EnumerateArray().Select(e => e.GetString()).Contains("autoconfirmed")) {
    <h1>BluehillBot B 긴급 정지 버튼</h1>

    <p>아래 입력란에다가 이유를 써 주세요. 필수 사항입니다.</p>

    <EditForm Model="submitData" OnValidSubmit="submit" FormName="TheForm">
        <DataAnnotationsValidator/>
        <ValidationSummary/>
        <p>
            <InputTextArea @bind-Value="submitData!.Reason"/>
        </p>
        <p style="text-align: center">
            <button class="btn btn-primary" style="width: 500px" type="submit">제출</button>
        </p>
    </EditForm>
} else {
    <PageTitle>오류</PageTitle>

    <h1>오류</h1>

    <p>당신은 자동 인증된 사용자가 아니기에 봇을 정지시킬 권한이 없습니다.</p>
}

@code {
    private UserProfile? userProfile;

    [SupplyParameterFromForm]
    private SubmitData? submitData { get; set; } 

    protected override async Task OnInitializedAsync() {
        var accessToken = HttpContextAccessor.HttpContext!.Session.GetString("AccessToken");

        if (accessToken is not null) {
            userProfile = await OAuthService.GetUserProfileAsync(accessToken);
            submitData = new(userProfile.UserName);
        }
    }

    private void login() => NavManager.NavigateTo(OAuthService.BuildAuthorizationUrl().ToString(), forceLoad: true);

    private async Task submit() {
        using var client = HttpClientFactory.CreateClient();

        client.DefaultRequestHeaders.UserAgent.ParseAdd("BluehillBotB-Emergency-Shutoff/0.0 (na1307@outlook.kr)");
        
        var asdf = await client.PostAsJsonAsync(new Uri("https://bluehillbotb.toolforge.org/submit"), submitData);

        if (!asdf.IsSuccessStatusCode) {
            LoggerFactory.CreateLogger("c8rom").LogInformation(await asdf.Content.ReadAsStringAsync());
        }
    }

}
